/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the CountCriteriaInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CountCriteriaInner{}

// CountCriteriaInner struct for CountCriteriaInner
type CountCriteriaInner struct {
	Field      *string                  `json:"field,omitempty"`
	Comparator *string                  `json:"comparator,omitempty"`
	Value      *CountCriteriaInnerValue `json:"value,omitempty"`
}

// NewCountCriteriaInner instantiates a new CountCriteriaInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCountCriteriaInner() *CountCriteriaInner {
	this := CountCriteriaInner{}
	return &this
}

// NewCountCriteriaInnerWithDefaults instantiates a new CountCriteriaInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCountCriteriaInnerWithDefaults() *CountCriteriaInner {
	this := CountCriteriaInner{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *CountCriteriaInner) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountCriteriaInner) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *CountCriteriaInner) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *CountCriteriaInner) SetField(v string) {
	o.Field = &v
}

// GetComparator returns the Comparator field value if set, zero value otherwise.
func (o *CountCriteriaInner) GetComparator() string {
	if o == nil || IsNil(o.Comparator) {
		var ret string
		return ret
	}
	return *o.Comparator
}

// GetComparatorOk returns a tuple with the Comparator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountCriteriaInner) GetComparatorOk() (*string, bool) {
	if o == nil || IsNil(o.Comparator) {
		return nil, false
	}
	return o.Comparator, true
}

// HasComparator returns a boolean if a field has been set.
func (o *CountCriteriaInner) HasComparator() bool {
	if o != nil && !IsNil(o.Comparator) {
		return true
	}

	return false
}

// SetComparator gets a reference to the given string and assigns it to the Comparator field.
func (o *CountCriteriaInner) SetComparator(v string) {
	o.Comparator = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CountCriteriaInner) GetValue() CountCriteriaInnerValue {
	if o == nil || IsNil(o.Value) {
		var ret CountCriteriaInnerValue
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CountCriteriaInner) GetValueOk() (*CountCriteriaInnerValue, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CountCriteriaInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given CountCriteriaInnerValue and assigns it to the Value field.
func (o *CountCriteriaInner) SetValue(v CountCriteriaInnerValue) {
	o.Value = &v
}

func (o CountCriteriaInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CountCriteriaInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Comparator) {
		toSerialize["comparator"] = o.Comparator
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCountCriteriaInner struct {
	value *CountCriteriaInner
	isSet bool
}

func (v NullableCountCriteriaInner) Get() *CountCriteriaInner {
	return v.value
}

func (v *NullableCountCriteriaInner) Set(val *CountCriteriaInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCountCriteriaInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCountCriteriaInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCountCriteriaInner(val *CountCriteriaInner) *NullableCountCriteriaInner {
	return &NullableCountCriteriaInner{value: val, isSet: true}
}

func (v NullableCountCriteriaInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCountCriteriaInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
