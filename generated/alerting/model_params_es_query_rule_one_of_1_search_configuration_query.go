/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the ParamsEsQueryRuleOneOf1SearchConfigurationQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParamsEsQueryRuleOneOf1SearchConfigurationQuery{}

// ParamsEsQueryRuleOneOf1SearchConfigurationQuery struct for ParamsEsQueryRuleOneOf1SearchConfigurationQuery
type ParamsEsQueryRuleOneOf1SearchConfigurationQuery struct {
	Language *string `json:"language,omitempty"`
	Query    *string `json:"query,omitempty"`
}

// NewParamsEsQueryRuleOneOf1SearchConfigurationQuery instantiates a new ParamsEsQueryRuleOneOf1SearchConfigurationQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParamsEsQueryRuleOneOf1SearchConfigurationQuery() *ParamsEsQueryRuleOneOf1SearchConfigurationQuery {
	this := ParamsEsQueryRuleOneOf1SearchConfigurationQuery{}
	return &this
}

// NewParamsEsQueryRuleOneOf1SearchConfigurationQueryWithDefaults instantiates a new ParamsEsQueryRuleOneOf1SearchConfigurationQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParamsEsQueryRuleOneOf1SearchConfigurationQueryWithDefaults() *ParamsEsQueryRuleOneOf1SearchConfigurationQuery {
	this := ParamsEsQueryRuleOneOf1SearchConfigurationQuery{}
	return &this
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) SetLanguage(v string) {
	o.Language = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) SetQuery(v string) {
	o.Query = &v
}

func (o ParamsEsQueryRuleOneOf1SearchConfigurationQuery) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParamsEsQueryRuleOneOf1SearchConfigurationQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	return toSerialize, nil
}

type NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery struct {
	value *ParamsEsQueryRuleOneOf1SearchConfigurationQuery
	isSet bool
}

func (v NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery) Get() *ParamsEsQueryRuleOneOf1SearchConfigurationQuery {
	return v.value
}

func (v *NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery) Set(val *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParamsEsQueryRuleOneOf1SearchConfigurationQuery(val *ParamsEsQueryRuleOneOf1SearchConfigurationQuery) *NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery {
	return &NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery{value: val, isSet: true}
}

func (v NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParamsEsQueryRuleOneOf1SearchConfigurationQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
